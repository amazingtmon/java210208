<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee https://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
	<!--
		web.xml -> 배치서술자 = 가장 먼저 실행시킴.
		서블릿은 main 메소드를 가질 수 없으므로 URL을 만든다.
		URL 매핑은 servlet-mapping 태그에 등록.
		URL의 마지막 주소가 .sp 라면 
		======================================
		servlet을 3개로 나눔.
		1. servlet-context.xml
		2. root-context.xml -> model 계층 관리.
		3. spring-data.xml -> ORM solution.
	 -->
	
	
	<!-- The definition of the Root Spring Container shared by all Servlets and Filters -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
		/WEB-INF/spring/root-context.xml
		,/WEB-INF/spring/spring-data.xml
		</param-value>
	</context-param>
	
	<!-- Creates the Spring Container shared by all Servlets and Filters -->
	<!-- 
		<listener> -> interface와 같은 것.
		listener 태그가 없다면 3개의 xml문서는 무용지물이다.
	-->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- Processes application requests -->
	<servlet>
		<servlet-name>appServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- 서버가 변경될때마다 읽어들이게 된다. -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring/appServlet/servlet-context.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
		
	<servlet-mapping>
		<servlet-name>appServlet</servlet-name>
		<!-- FrontController -->
		<url-pattern>*.sp</url-pattern>
	</servlet-mapping>

</web-app>
